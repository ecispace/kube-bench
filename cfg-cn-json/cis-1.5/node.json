{
  "controls": null,
  "version": 1.5,
  "id": 4,
  "text": "Worker Node 安全配置要求",
  "type": "node",
  "isEnable": true,
  "groups": [
    {
      "id": 4.1,
      "text": "Worker Node Configuration Files",
      "checks": [
        {
          "id": "4.1.1",
          "text": "确保将kubelet.conf文件所有权设置为root:root (计入分数)",
          "audit": "/bin/sh -c 'if test -e $kubeletsvc; then stat -c permissions=%a $kubeletsvc; fi' ",
          "tests": {
            "test_items": [
              {
                "flag": "permissions",
                "set": true,
                "compare": {
                  "op": "bitmask",
                  "value": "644"
                }
              }
            ]
          },
          "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchmod 644 $kubeletsvc\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.1.2",
          "text": "确保将kubelet service文件所有权设置为root:root (计入分数)",
          "audit": "/bin/sh -c 'if test -e $kubeletsvc; then stat -c %U:%G $kubeletsvc; fi' ",
          "tests": {
            "test_items": [
              {
                "flag": "root:root",
                "set": true
              }
            ]
          },
          "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchown root:root $kubeletsvc\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.1.3",
          "text": "确保将kubeconfig文件权限设置为644或更严格 (计入分数)",
          "audit": "/bin/sh -c 'if test -e $proxykubeconfig; then stat -c permissions=%a $proxykubeconfig; fi' ",
          "tests": {
            "test_items": [
              {
                "flag": "permissions",
                "set": true,
                "compare": {
                  "op": "bitmask",
                  "value": "644"
                }
              }
            ]
          },
          "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchmod 644 $proxykubeconfig\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.1.4",
          "text": "确保将kubeconfig文件所有权设置为root:root (计入分数)",
          "audit": "/bin/sh -c 'if test -e $proxykubeconfig; then stat -c %U:%G $proxykubeconfig; fi' ",
          "tests": {
            "test_items": [
              {
                "flag": "root:root",
                "set": true
              }
            ]
          },
          "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example, chown root:root $proxykubeconfig\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.1.5",
          "text": "确保将kubelet service文件权限设置为644或更严格 (计入分数)",
          "audit": "/bin/sh -c 'if test -e $kubeletkubeconfig; then stat -c permissions=%a $kubeletkubeconfig; fi' ",
          "tests": {
            "test_items": [
              {
                "flag": "permissions",
                "set": true,
                "compare": {
                  "op": "bitmask",
                  "value": "644"
                }
              }
            ]
          },
          "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchmod 644 $kubeletkubeconfig\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.1.6",
          "text": "确保将kubelet.conf文件权限设置为644或更严格 (计入分数)",
          "audit": "/bin/sh -c 'if test -e $kubeletkubeconfig; then stat -c %U:%G $kubeletkubeconfig; fi' ",
          "tests": {
            "test_items": [
              {
                "flag": "root:root",
                "set": true,
                "compare": {
                  "op": "eq",
                  "value": "root:root"
                }
              }
            ]
          },
          "remediation": "Run the below command (based on the file location on your system) on the each worker node.\nFor example,\nchown root:root $kubeletkubeconfig\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.1.7",
          "text": "确保kubelet配置文件的权限设置为644或更严格 (计入分数)",
          "types": "manual",
          "remediation": "Run the following command to modify the file permissions of the\n--client-ca-file chmod 644 <filename>\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.1.8",
          "text": "确保将client certificate authorities文件所有权设置为root:root (计入分数)",
          "audit": "CAFILE=$(ps -ef | grep kubelet | grep -v apiserver | grep -- --client-ca-file= | awk -F '--client-ca-file=' '{print $2}' | awk '{print $1}')\nif [[ -z $CAFILE ]]; then\n  CAFILE=$kubeletcafile\nfi\nif test -e $CAFILE; then stat -c %U:%G $CAFILE; fi\n",
          "tests": {
            "test_items": [
              {
                "flag": "root:root",
                "set": true,
                "compare": {
                  "op": "eq",
                  "value": "root:root"
                }
              }
            ]
          },
          "remediation": "Run the following command to modify the ownership of the --client-ca-file.\nchown root:root <filename>\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.1.9",
          "text": "确保kubelet配置文件的权限设置为644或更严格 (计入分数)",
          "audit": "/bin/sh -c 'if test -e $kubeletconf; then stat -c permissions=%a $kubeletconf; fi' ",
          "tests": {
            "test_items": [
              {
                "flag": "permissions",
                "set": true,
                "compare": {
                  "op": "bitmask",
                  "value": "644"
                }
              }
            ]
          },
          "remediation": "运行以下命令（使用在审计步骤中的配置文件位置）\nchmod 644 $kubeletconf\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.1.10",
          "text": "确保kubelet配置文件的用户为root:root (计入分数)",
          "audit": "/bin/sh -c 'if test -e $kubeletconf; then stat -c %U:%G $kubeletconf; fi' ",
          "tests": {
            "test_items": [
              {
                "flag": "root:root",
                "set": true
              }
            ]
          },
          "remediation": "运行以下命令（使用在审计步骤中的配置文件位置）\nchown root:root $kubeletconf\n",
          "scored": true
        }
      ]
    },
    {
      "id": 4.2,
      "text": "Kubelet",
      "checks": [
        {
          "id": "4.2.1",
          "text": "确保将--anonymous-auth参数设置为false (计入分数)",
          "audit": "/bin/ps -fC $kubeletbin",
          "audit_config": "/bin/cat $kubeletconf",
          "tests": {
            "test_items": [
              {
                "flag": "--anonymous-auth",
                "path": "{.authentication.anonymous.enabled}",
                "set": true,
                "compare": {
                  "op": "eq",
                  "value": false
                }
              }
            ]
          },
          "remediation": "If using a Kubelet config file, edit the file to set authentication: anonymous: enabled to\nfalse.\nIf using executable arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--anonymous-auth=false\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.2.2",
          "text": "确保--authorization-mode参数未设置为AlwaysAllow (计入分数)",
          "audit": "/bin/ps -fC $kubeletbin",
          "audit_config": "/bin/cat $kubeletconf",
          "tests": {
            "test_items": [
              {
                "flag": "--authorization-mode",
                "path": "{.authorization.mode}",
                "set": true,
                "compare": {
                  "op": "nothave",
                  "value": "AlwaysAllow"
                }
              }
            ]
          },
          "remediation": "If using a Kubelet config file, edit the file to set authorization: mode to Webhook. If\nusing executable arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nset the below parameter in KUBELET_AUTHZ_ARGS variable.\n--authorization-mode=Webhook\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.2.3",
          "text": "确保将--client-ca-file参数设置为适当的值 (计入分数)",
          "audit": "/bin/ps -fC $kubeletbin",
          "audit_config": "/bin/cat $kubeletconf",
          "tests": {
            "test_items": [
              {
                "flag": "--client-ca-file",
                "path": "{.authentication.x509.clientCAFile}",
                "set": true
              }
            ]
          },
          "remediation": "如果使用Kubelet配置文件，请编辑该文件设置 authentication: x509: clientCAFile 为客户端CA文件的位置。如果使用命令行参数，请在每个工作节点上编辑kubelet服务文件$kubeletsvc ，在 KUBELET_AUTHZ_ARGS 变量中设置以下参数 --client-ca-file=<path/to/client-ca-file> 根据您的系统，重新启动 kubelet 服务。例如:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.2.4",
          "text": "确保将--read-only-port参数设置为0 (计入分数)",
          "audit": "/bin/ps -fC $kubeletbin",
          "audit_config": "/bin/cat $kubeletconf",
          "tests": {
            "test_items": [
              {
                "flag": "--read-only-port",
                "path": "{.readOnlyPort}",
                "set": true,
                "compare": {
                  "op": "eq",
                  "value": 0
                }
              }
            ]
          },
          "remediation": "If using a Kubelet config file, edit the file to set readOnlyPort to 0.\nIf using command line arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--read-only-port=0\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.2.5",
          "text": "确保--streaming-connection-idle-timeout参数未设置为0 (计入分数)",
          "audit": "/bin/ps -fC $kubeletbin",
          "audit_config": "/bin/cat $kubeletconf",
          "tests": {
            "test_items": [
              {
                "flag": "--streaming-connection-idle-timeout",
                "path": "{.streamingConnectionIdleTimeout}",
                "set": true,
                "compare": {
                  "op": "noteq",
                  "value": 0
                }
              },
              {
                "flag": "--streaming-connection-idle-timeout",
                "path": "{.streamingConnectionIdleTimeout}",
                "set": false
              }
            ],
            "bin_op": "or"
          },
          "remediation": "如果使用Kubelet配置文件，请编辑该文件设置 streamingConnectionIdleTimeout 为除0以外的值.如果使用命令行参数，请在每个工作节点上编辑kubelet服务文件$kubeletsvc ，在 KUBELET_SYSTEM_PODS_ARGS 变量中设置以下参数 --streaming-connection-idle-timeout=5m 根据您的系统，重启 kubelet 服务。例如:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.2.6",
          "text": "确保--protect-kernel-defaults参数设置为true (计入分数)",
          "audit": "/bin/ps -fC $kubeletbin",
          "audit_config": "/bin/cat $kubeletconf",
          "tests": {
            "test_items": [
              {
                "flag": "--protect-kernel-defaults",
                "path": "{.protectKernelDefaults}",
                "set": true,
                "compare": {
                  "op": "eq",
                  "value": true
                }
              }
            ]
          },
          "remediation": "If using a Kubelet config file, edit the file to set protectKernelDefaults: true.\nIf using command line arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--protect-kernel-defaults=true\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.2.7",
          "text": "确保--make-iptables-util-chains参数设置为true (计入分数)",
          "audit": "/bin/ps -fC $kubeletbin",
          "audit_config": "/bin/cat $kubeletconf",
          "tests": {
            "test_items": [
              {
                "flag": "--make-iptables-util-chains",
                "path": "{.makeIPTablesUtilChains}",
                "set": true,
                "compare": {
                  "op": "eq",
                  "value": true
                }
              },
              {
                "flag": "--make-iptables-util-chains",
                "path": "{.makeIPTablesUtilChains}",
                "set": false
              }
            ],
            "bin_op": "or"
          },
          "remediation": "If using a Kubelet config file, edit the file to set makeIPTablesUtilChains: true.\nIf using command line arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nremove the --make-iptables-util-chains argument from the\nKUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.2.8",
          "text": "确保未设置--hostname-override参数 (不计分数)",
          "audit": "/bin/ps -fC $kubeletbin ",
          "tests": {
            "test_items": [
              {
                "flag": "--hostname-override",
                "set": false
              }
            ]
          },
          "remediation": "编辑kubelet服务文件$kubeletsvc 在每个工作节点上，从 KUBELET_CERTIFICATE_ARGS 变量中删除 —hostname-override。 根据您的系统，重新启动 kubelet 服务。例如:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "4.2.9",
          "text": "确保将--event-qps参数设置为0 or a level which ensures appropriate event capture (不计分数)",
          "audit": "/bin/ps -fC $kubeletbin",
          "audit_config": "/bin/cat $kubeletconf",
          "tests": {
            "test_items": [
              {
                "flag": "--event-qps",
                "path": "{.eventRecordQPS}",
                "set": true,
                "compare": {
                  "op": "eq",
                  "value": 0
                }
              }
            ]
          },
          "remediation": "If using a Kubelet config file, edit the file to set eventRecordQPS: to an appropriate level.\nIf using command line arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "4.2.10",
          "text": "确保正确设置--tls-cert-file和--tls-private-key-file参数 (计入分数)",
          "audit": "/bin/ps -fC $kubeletbin",
          "audit_config": "/bin/cat $kubeletconf",
          "tests": {
            "test_items": [
              {
                "flag": "--tls-cert-file",
                "path": "{.tlsCertFile}",
                "set": true
              },
              {
                "flag": "--tls-private-key-file",
                "path": "{.tlsPrivateKeyFile}",
                "set": true
              }
            ]
          },
          "remediation": "If using a Kubelet config file, edit the file to set tlsCertFile to the location\nof the certificate file to use to identify this Kubelet, and tlsPrivateKeyFile\nto the location of the corresponding private key file.\nIf using command line arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nset the below parameters in KUBELET_CERTIFICATE_ARGS variable.\n--tls-cert-file=<path/to/tls-certificate-file>\n--tls-private-key-file=<path/to/tls-key-file>\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.2.11",
          "text": "确保--rotate-certificates参数未设置为false (计入分数)",
          "audit": "/bin/ps -fC $kubeletbin",
          "audit_config": "/bin/cat $kubeletconf",
          "tests": {
            "test_items": [
              {
                "flag": "--rotate-certificates",
                "path": "{.rotateCertificates}",
                "set": true,
                "compare": {
                  "op": "eq",
                  "value": true
                }
              },
              {
                "flag": "--rotate-certificates",
                "path": "{.rotateCertificates}",
                "set": false
              }
            ],
            "bin_op": "or"
          },
          "remediation": "If using a Kubelet config file, edit the file to add the line rotateCertificates: true or\nremove it altogether to use the default value.\nIf using command line arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nremove --rotate-certificates=false argument from the KUBELET_CERTIFICATE_ARGS\nvariable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.2.12",
          "text": "确保将RotateKubeletServerCertificate参数设置为true (计入分数)",
          "audit": "/bin/ps -fC $kubeletbin",
          "audit_config": "/bin/cat $kubeletconf",
          "tests": {
            "test_items": [
              {
                "flag": "RotateKubeletServerCertificate",
                "path": "{.featureGates.RotateKubeletServerCertificate}",
                "set": true,
                "compare": {
                  "op": "eq",
                  "value": true
                }
              }
            ]
          },
          "remediation": "编辑kubelet服务文件$kubeletsvc 在每个工作节点上，在 KUBELET_CERTIFICATE_ARGS 变量中设置以下参数 --feature-gates=RotateKubeletServerCertificate=true 根据您的系统，重新启动 kubelet 服务。例如:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "4.2.13",
          "text": "确保Kubelet仅使用强加密密码 (不计分数)",
          "audit": "/bin/ps -fC $kubeletbin",
          "audit_config": "/bin/cat $kubeletconf",
          "tests": {
            "test_items": [
              {
                "flag": "--tls-cipher-suites",
                "path": "{range .tlsCipherSuites[:]}{}{','}{end}",
                "set": true,
                "compare": {
                  "op": "valid_elements",
                  "value": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
                }
              }
            ]
          },
          "remediation": "如果使用Kubelet配置文件，编辑该文件设置 TLSCipherSuites 为:\nTLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256\nor to a subset of these values.\nIf using executable arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nset the --tls-cipher-suites parameter as follows, or to a subset of these values.\n--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
          "scored": false,
          "isEnable": true
        }
      ]
    }
  ]
}