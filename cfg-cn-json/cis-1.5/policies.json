{
  "controls": null,
  "version": 1.5,
  "id": 5,
  "text": "Kubernetes Policies",
  "type": "policies",
  "isEnable": true,
  "groups": [
    {
      "id": 5.1,
      "text": "RBAC and Service Accounts",
      "checks": [
        {
          "id": "5.1.1",
          "text": "确保仅在需要时使用集群管理员角色 (不计分数)",
          "type": "manual",
          "remediation": "Identify all clusterrolebindings to the cluster-admin role. Check if they are used and\nif they need this role or if they could use a role with fewer privileges.\nWhere possible, first bind users to a lower privileged role and then remove the\nclusterrolebinding to the cluster-admin role :\nkubectl delete clusterrolebinding [name]\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.1.2",
          "text": "Minimize access to secrets (不计分数)",
          "type": "manual",
          "remediation": "Where possible, remove get, list and watch access to secret objects in the cluster.\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.1.3",
          "text": "Minimize wildcard use in Roles and ClusterRoles (不计分数)",
          "type": "manual",
          "remediation": "Where possible replace any use of wildcards in clusterroles and roles with specific\nobjects or actions.\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.1.4",
          "text": "Minimize access to create pods (不计分数)",
          "type": "manual",
          "remediation": "Where possible, remove create access to pod objects in the cluster.\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.1.5",
          "text": "Ensure that default service accounts are not actively used. (计入分数)",
          "type": "manual",
          "remediation": "Create explicit service accounts wherever a Kubernetes workload requires specific access\nto the Kubernetes API server.\nModify the configuration of each default service account to include this value\nautomountServiceAccountToken: false\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "5.1.6",
          "text": "Ensure that Service Account Tokens are only mounted where necessary (不计分数)",
          "type": "manual",
          "remediation": "Modify the definition of pods and service accounts which do not need to mount service\naccount tokens to disable it.\n",
          "scored": false
        }
      ]
    },
    {
      "id": 5.2,
      "text": "Pod Security Policies",
      "checks": [
        {
          "id": "5.2.1",
          "text": "Minimize the admission of privileged containers (不计分数)",
          "type": "manual",
          "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that\nthe .spec.privileged field is omitted or set to false.\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.2.2",
          "text": "Minimize the admission of containers wishing to share the host process ID namespace (计入分数)",
          "type": "manual",
          "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.hostPID field is omitted or set to false.\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "5.2.3",
          "text": "Minimize the admission of containers wishing to share the host IPC namespace (计入分数)",
          "type": "manual",
          "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.hostIPC field is omitted or set to false.\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "5.2.4",
          "text": "Minimize the admission of containers wishing to share the host network namespace (计入分数)",
          "type": "manual",
          "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.hostNetwork field is omitted or set to false.\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "5.2.5",
          "text": "Minimize the admission of containers with allowPrivilegeEscalation (计入分数)",
          "type": "manual",
          "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.allowPrivilegeEscalation field is omitted or set to false.\n",
          "scored": true,
          "isEnable": true
        },
        {
          "id": "5.2.6",
          "text": "Minimize the admission of root containers (不计分数)",
          "type": "manual",
          "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.runAsUser.rule is set to either MustRunAsNonRoot or MustRunAs with the range of\nUIDs not including 0.\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.2.7",
          "text": "Minimize the admission of containers with the NET_RAW capability (不计分数)",
          "type": "manual",
          "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n.spec.requiredDropCapabilities is set to include either NET_RAW or ALL.\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.2.8",
          "text": "Minimize the admission of containers with added capabilities (不计分数)",
          "type": "manual",
          "remediation": "Ensure that allowedCapabilities is not present in PSPs for the cluster unless\nit is set to an empty array.\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.2.9",
          "text": "Minimize the admission of containers with capabilities assigned (不计分数)",
          "type": "manual",
          "remediation": "Review the use of capabilites in applications runnning on your cluster. Where a namespace\ncontains applicaions which do not require any Linux capabities to operate consider adding\na PSP which forbids the admission of containers which do not drop all capabilities.\n",
          "scored": false
        }
      ]
    },
    {
      "id": 5.3,
      "text": "Network Policies and CNI",
      "checks": [
        {
          "id": "5.3.1",
          "text": "Ensure that the CNI in use supports Network Policies (不计分数)",
          "type": "manual",
          "remediation": "If the CNI plugin in use does not support network policies, consideration should be given to\nmaking use of a different plugin, or finding an alternate mechanism for restricting traffic\nin the Kubernetes cluster.\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.3.2",
          "text": "Ensure that all Namespaces have Network Policies defined (计入分数)",
          "type": "manual",
          "remediation": "按照文档根据需要创建NetworkPolicy对象。\n",
          "scored": true
        }
      ]
    },
    {
      "id": 5.4,
      "text": "Secrets Management",
      "checks": [
        {
          "id": "5.4.1",
          "text": "Prefer using secrets as files over secrets as environment variables (不计分数)",
          "type": "manual",
          "remediation": "if possible, rewrite application code to read secrets from mounted secret files, rather than\nfrom environment variables.\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.4.2",
          "text": "Consider external secret storage (不计分数)",
          "type": "manual",
          "remediation": "Refer to the secrets management options offered by your cloud provider or a third-party\nsecrets management solution.\n",
          "scored": false
        }
      ]
    },
    {
      "id": 5.5,
      "text": "Extensible Admission Control",
      "checks": [
        {
          "id": "5.5.1",
          "text": "使用ImagePolicyWebhook许可控制器配置Image Provenance (不计分数)",
          "type": "manual",
          "remediation": "按照Kubernetes文档设置Image Provenance。\n",
          "scored": false
        }
      ]
    },
    {
      "id": 5.6,
      "text": "General Policies",
      "checks": [
        {
          "id": "5.6.1",
          "text": "使用命名空间在资源之间创建管理边界 (不计分数)",
          "type": "manual",
          "remediation": "Follow the documentation and create namespaces for objects in your deployment as you need\nthem.\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.6.2",
          "text": "Ensure that the seccomp profile is set to docker/default in your pod definitions (不计分数)",
          "type": "manual",
          "remediation": "Seccomp目前是一个alpha功能。 默认情况下，禁用所有Alpha功能。 因此，您需要通过传递\"--featuregates=AllAlpha=true\"参数来启用apiserver中的alpha功能。\nEdit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS\nparameter to \"--feature-gates=AllAlpha=true\"\nKUBE_API_ARGS=\"--feature-gates=AllAlpha=true\"\n根据您的系统，重新启动kube-apiserver服务。 例如：\nsystemctl restart kube-apiserver.service\n使用注释在pod定义中启用docker/default seccomp配置文件。 一个例子如下：\napiVersion: v1\nkind: Pod\nmetadata:\n  name: trustworthy-pod\n  annotations:\n    seccomp.security.alpha.kubernetes.io/pod: docker/default\nspec:\n  containers:\n    - name: trustworthy-container\n      image: sotrustworthy:latest\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.6.3",
          "text": "将Security Context应用于您的Pod和容器 (不计分数)",
          "type": "manual",
          "remediation": "按照Kubernetes文档将Security Context应用到您的pod。 有关Security Context的建议列表，您可以参考Docker容器的CIS安全基准。\n",
          "scored": false,
          "isEnable": true
        },
        {
          "id": "5.6.4",
          "text": "The default namespace should not be used (计入分数)",
          "type": "manual",
          "remediation": "Ensure that namespaces are created to allow for appropriate segregation of Kubernetes\nresources and that all new resources are created in a specific namespace.\n",
          "scored": true,
          "isEnable": true
        }
      ]
    }
  ]
}